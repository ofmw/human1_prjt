<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.omart.MemberMapper">
    
    <!-- 아이디검사 구문 -->
    <select id="checkId" parameterType="string" resultType="_int">
        SELECT count(*)
        FROM member_omart
        WHERE m_id=#{m_id}
    </select>
    <!-- 전화번호검사 구문 -->
    <select id="checkSelNum" parameterType="string" resultType="_int">
        SELECT count(*)
        FROM member_omart
        WHERE selNum=#{selNUm}
    </select>
    <!-- 회원가입 구문 (오마트) -->
    <insert id="join" parameterType="MemberVo">
        CALL join_member(#{m_name}, #{birth}, #{gender}, #{selNum}, #{m_id}, #{m_pw}, "omart")
    </insert>
    
    <!-- 회원가입 구문 (카카오) -->
    <insert id="kjoin" parameterType="MemberVo">
        CALL join_member(#{nickname}, #{birthday}, #{gender}, #{selNum}, #{email}, "kakao", "kakao")
    </insert>
    
    <!-- 회원가입 구문 (카카오) -->
    <insert id="njoin" parameterType="MemberVo">
        CALL join_member(#{name}, #{birthday}, #{gender}, #{mobile}, #{email}, "naver", "naver")
    </insert>
    
    <!-- 회원가입시 찜목록에 행 생성하기 위해 가입정보 조회 -->
    <select id="checkM_idx" parameterType="MemberVo" resultType="_int">
    	SELECT m_idx
    	FROM member_omart
    	WHERE m_id = #{m_id}
    </select>
    
    <update id="recordLogin" parameterType="_int">
        update member_omart
        set login_date = now()
        where m_idx = #{m_idx}
    </update>
    
    <!-- 로그인 처리구문 -->
    <select id="login" parameterType="map" resultType="memberVo">
        SELECT *
        FROM member_omart
        WHERE m_id=#{m_id}
    </select>
    
    <!-- 회원정보 수정구문 -->
    <update id="update" parameterType="memberVo">
        UPDATE member_omart
        SET m_pw=#{m_pw}, m_name=#{m_name}, gender=#{gender}, selNum=#{selNum}, update_date=now()
        WHERE m_id=#{m_id}
    </update>
    
    <!-- 업데이트된 회원정보 가져오는 구문 -->
    <select id="selectOne" parameterType="string" resultType="memberVo">
        SELECT *
        FROM member_omart
        WHERE m_id=#{m_id}
    </select>
    
    <!-- 회원탈퇴 -->
    <delete id="cancel" parameterType="_int">
	    CALL cancel_member(#{m_idx})
    </delete>
    
    <!-- 가입자 정보 찾기 -->
	<select id="checkMember" parameterType="string" resultType="memberVo">
		SELECT *
		FROM member_omart
		WHERE m_id=#{email}
	</select>
	
	<insert id="insertWish" parameterType="_int">
	   insert into wish (m_idx) values(#{m_idx})
	</insert>
    
    <select id="getWishList" parameterType="_int" resultType="wishVo">
        select * from wish where m_idx = #{m_idx}
    </select>
    
    <select id="getPoint" parameterType="_int" resultType="_int">
        select point from point where m_idx = #{m_idx}
    </select>
    
    <update id="usePoint" parameterType="memberVo">
        UPDATE point
        SET point = point - #{point}
        WHERE m_idx=#{m_idx}
    </update>
    
    <update id="addPoint" parameterType="pointVo">
        UPDATE point
        SET point = point + #{savePoint}
        WHERE m_idx=#{m_idx}
    </update>
    
    <!-- 찜목록 페이지 정보 -->
    <select id="getP_info" parameterType="java.util.List" resultType="productVo">
	    SELECT *
	    FROM product
	    WHERE p_id IN
	    <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
	        #{item}
	    </foreach>
	    ORDER BY FIELD(p_id,
	        <foreach item="item" index="index" collection="list" separator=",">
	            #{item}
	        </foreach>
	    )
	</select>
	
	<!-- 찜목록 삭제 -->
    <update id="removeWishList" parameterType="map">
	    UPDATE wish
	    SET w_list = TRIM(BOTH ',' FROM REPLACE(CONCAT(',', w_list, ','), CONCAT(',', #{p_id}, ','), ','))
	    WHERE m_idx = #{m_idx}
	</update>
	
    <select id="orderList" parameterType="_int" resultType="orderVo">
        select * from order_list where m_idx = #{m_idx}
    </select>
    
    <insert id="write_review_process" parameterType="boardFileVo">
        insert into review(order_idx, p_id, content, stars) values(#{order_idx}, #{p_id}, #{content}, #{stars})
    </insert>
    
    <select id="selectReviewList" parameterType="string" resultType="boardFileVo">
        select * from review where p_id = #{p_id} order by post_date desc
    </select>
    
    <select id="getMemberNameFromOrder" parameterType="string" resultType="string">
        SELECT m.m_name
	    FROM member_omart m
		JOIN order_list o ON m.m_idx = o.m_idx
		WHERE o.order_idx = #{order_idx}
    </select>
    
    <select id="getGradeFromOrder" parameterType="string" resultType="_int">
        SELECT m.grade
        FROM member_omart m
        JOIN order_list o ON m.m_idx = o.m_idx
        WHERE o.order_idx = #{order_idx}
    </select>
	
</mapper>