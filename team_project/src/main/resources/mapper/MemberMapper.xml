<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.omart.MemberMapper">
    
    <!-- 아이디검사 구문 -->
    <!-- 일반적으로 id값은 DAO의 메소드이름으로 정의, parameterType: 입력값의 데이터타입, resultType: 조회결과값의 데이터타입 -->
    <!-- MyBatis도 SQL구문을 PreparedStatement구문으로 사용함. ?대신 #{파라미터이름}을 사용 -->
    <select id="checkId" parameterType="string" resultType="_int">
        select count(*) from member_omart where m_id=#{m_id}
    </select>
    
    <!-- 회원정보 입력구문 -->
    <insert id="join" parameterType="MemberVo">
        insert into member_omart(m_name, birth, gender, selNum, m_id, m_pw) 
                    values(#{m_name}, #{birth}, #{gender}, #{selNum}, #{m_id}, #{m_pw})
    </insert>
    
    <!-- 로그인 처리구문 -->
    <select id="login" parameterType="map" resultType="memberVo">
        SELECT *
        from member_omart
        WHERE m_id=#{m_id}
    </select>
    
    <!-- 회원정보 수정구문 -->
    <update id="update" parameterType="memberVo">
        update m_omart set m_pw=#{m_pw}, m_name=#{m_name}, gender=#{gender}, selNum=#{selNum}, update_date=now() where m_id=#{m_id}
    </update>
    
    <!-- 업데이트된 회원정보 가져오는 구문 -->
    <select id="selectOne" parameterType="string" resultType="memberVo">
        select * from member_omart where m_id=#{m_id}
    </select>
    
    <update id="cancel" parameterType="_int">
        update m_omart set cancel_or_not=-1, cancel_date=now() where m_idx=#{m_idx}
    </update>
    
    <!-- 정보 찾기 -->
	<select id="klogin" parameterType="map" resultType="kakaoVo">
		SELECT *
		FROM account_kakao
		WHERE m_id=#{email}
	</select>
	
	<!-- 정보 저장 -->
	<insert id="kjoin" parameterType="map">
		INSERT INTO account_kakao(m_id, m_name, gender)
		VALUES(#{email}, #{nickname},
			<choose>
				<when test="#{gender} == 'male'">0</when>
       			<when test="#{gender} == 'female'">1</when>
			</choose>
		)
	</insert>
    
</mapper>